version: '3.8'

services:
  mongodb:
    image: mongo:latest # Or specify a version like mongo:5.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: productuser # Replace with your desired username
      MONGO_INITDB_ROOT_PASSWORD: productpass # Replace with a strong password
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092

#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0 # Or specify your desired version
#    container_name: elasticsearch
#    environment:
#      - discovery.type=single-node
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # Adjust memory limits as needed
#      - "xpack.security.enabled=false" # Disable security for development (NOT RECOMMENDED FOR PRODUCTION)
#    ports:
#      - "9200:9200"
#      - "9300:9300"
#    volumes:
#      - esdata1:/usr/share/elasticsearch/data
#    healthcheck:
#      test: curl --fail http://localhost:9200
#      interval: 30s
#      timeout: 10s
#      retries: 3
#    restart: always


volumes:
  mongodb_data:
    driver: local
  kafka_data:
    driver: local
  zookeeper_data:
    driver: local
#  esdata1:
#    driver: local
